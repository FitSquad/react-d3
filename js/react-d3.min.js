!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.rd3=e()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),common=require("./common"),Chart=common.Chart,XAxis=common.XAxis,YAxis=common.YAxis,_=require("lodash"),Area=React.createClass({displayName:"Area",propTypes:{path:React.PropTypes.string,fill:React.PropTypes.string,height:React.PropTypes.number,width:React.PropTypes.number},getDefaultProps:function(){return{fill:"#3182bd"}},render:function(){return React.createElement("path",{className:"area-path",d:this.props.path,fill:this.props.fill})}}),DataSeries=React.createClass({displayName:"DataSeries",render:function(){var props=this.props,area=d3.svg.area().x(function(d){return props.xScale(d.date)}).y0(this.props.height).y1(function(d){return props.yScale(d.value)}),path=area(this.props.data);return React.createElement(Area,{path:path})}}),AreaChart=React.createClass({displayName:"AreaChart",propTypes:{data:React.PropTypes.array,yAxisTickCount:React.PropTypes.number,xAxisTickInterval:React.PropTypes.object,width:React.PropTypes.number,height:React.PropTypes.number,title:React.PropTypes.string},getDefaultProps:function(){return{data:[],yAxisTickCount:4,xAxisTickInterval:{unit:"years",interval:1},width:400,height:200,title:""}},render:function(){var props=this.props,xScale=d3.time.scale().range([0,props.width]);xScale.domain(d3.extent(props.data,function(d){return d.date}));var yScale=d3.scale.linear().range([props.height,0]),values=_.pluck(props.data,"value");yScale.domain([d3.min([d3.min(values),0]),d3.max(values)]);var margin={top:20,right:20,bottom:30,left:50},trans="translate("+margin.left+","+margin.top+")";return React.createElement(Chart,{ref:"chart",width:this.props.width+margin.left+margin.right,height:this.props.height+margin.top+margin.bottom,title:this.props.title},React.createElement("g",{transform:trans},React.createElement(DataSeries,{xScale:xScale,yScale:yScale,data:this.props.data,width:this.props.width,height:this.props.height}),React.createElement(XAxis,{xAxisClassName:"area x axis",xScale:xScale,xAxisTickInterval:this.props.xAxisTickInterval,margin:margin,width:this.props.width,height:this.props.height}),React.createElement(YAxis,{yAxisClassName:"area y axis",yScale:yScale,margin:margin,yAxisTickCount:this.props.yAxisTickCount,width:this.props.width,height:this.props.height})))}});exports.AreaChart=AreaChart},{"./common":3,d3:"d3",lodash:"lodash",react:"react"}],2:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),common=require("./common"),Chart=common.Chart,XAxis=common.XAxis,YAxis=common.YAxis,_=require("lodash"),Bar=React.createClass({displayName:"Bar",propTypes:{fill:React.PropTypes.string,width:React.PropTypes.number,height:React.PropTypes.number,offset:React.PropTypes.number},getDefaultProps:function(){return{offset:0}},render:function(){return React.createElement("rect",{fill:this.props.fill,width:this.props.width,height:this.props.height,x:this.props.offset,y:this.props.availableHeight-this.props.height})}}),DataSeries=React.createClass({displayName:"DataSeries",propTypes:{fill:React.PropTypes.string,title:React.PropTypes.string,padding:React.PropTypes.number,width:React.PropTypes.number,height:React.PropTypes.number,offset:React.PropTypes.number},getDefaultProps:function(){return{padding:.1,data:[]}},render:function(){var props=this.props,xScale=d3.scale.ordinal().domain(d3.range(props.values.length)).rangeRoundBands([0,this.props.width],this.props.padding),bars=props.values.map(function(point,i){return React.createElement(Bar,{height:props.yScale(0)-props.yScale(point),width:xScale.rangeBand(),offset:xScale(i),availableHeight:props.height,fill:props.fill,key:i})});return React.createElement("g",null,bars)}}),BarChart=React.createClass({displayName:"BarChart",propTypes:{data:React.PropTypes.array,yAxisTickCount:React.PropTypes.number,width:React.PropTypes.number,margins:React.PropTypes.object,height:React.PropTypes.number,fill:React.PropTypes.string,title:React.PropTypes.string},getDefaultProps:function(){return{data:[],yAxisTickCount:4,width:500,height:200,margins:{top:20,right:30,bottom:30,left:30},fill:"#3182bd",title:""}},render:function(){var values=_.pluck(this.props.data,"value"),labels=_.pluck(this.props.data,"label"),margins=this.props.margins,sideMargins=margins.left+margins.right,topBottomMargins=margins.top+margins.bottom,yScale=d3.scale.linear().domain([d3.min([d3.min(values),0]),d3.max(values)]).range([this.props.height-topBottomMargins,0]),xScale=d3.scale.ordinal().domain(labels).rangeRoundBands([0,this.props.width-sideMargins],.1),trans="translate("+margins.left+","+margins.top+")";return React.createElement(Chart,{width:this.props.width,height:this.props.height,title:this.props.title},React.createElement("g",{transform:trans},React.createElement(DataSeries,{values:values,yScale:yScale,xScale:yScale,margins:margins,data:this.props.data,width:this.props.width-sideMargins,height:this.props.height-topBottomMargins,fill:this.props.fill}),React.createElement(YAxis,{yAxisClassName:"bar y axis",yScale:yScale,margins:margins,yAxisTickCount:this.props.yAxisTickCount,width:this.props.width-sideMargins,height:this.props.height-topBottomMargins}),React.createElement(XAxis,{xAxisClassName:"bar x axis",xScale:xScale,data:this.props.data,margins:margins,width:this.props.width-sideMargins,height:this.props.height-topBottomMargins})))}});exports.BarChart=BarChart},{"./common":3,d3:"d3",lodash:"lodash",react:"react"}],3:[function(require,module,exports){var React=require("react"),d3=require("d3");exports.Chart=React.createClass({displayName:"Chart",render:function(){return React.createElement("div",null,React.createElement("h3",null,this.props.title),React.createElement("svg",{width:this.props.width,height:this.props.height},this.props.children))}}),exports.XAxis=React.createClass({displayName:"XAxis",propTypes:{xAxisClassName:React.PropTypes.string.isRequired,orient:React.PropTypes.oneOf(["top","bottom"]),xScale:React.PropTypes.func.isRequired,height:React.PropTypes.number.isRequired,fill:React.PropTypes.string,stroke:React.PropTypes.string,tickStroke:React.PropTypes.string,strokeWidth:React.PropTypes.string,hideOrigin:React.PropTypes.bool},getDefaultProps:function(){return{xAxisClassName:"x axis",orient:"bottom",fill:"none",stroke:"none",tickStroke:"#000",strokeWidth:"none",hideOrigin:!1}},componentDidMount:function(){this._renderAxis(this.props)},componentWillReceiveProps:function(props){this._renderAxis(props)},_renderAxis:function(props){var xAxis=d3.svg.axis().scale(props.xScale).orient("bottom");props.xAxisTickInterval?xAxis.ticks(d3.time[props.xAxisTickInterval.unit],props.xAxisTickInterval.interval):props.xAxisTickCount&&xAxis.ticks(props.xAxisTickCount),xAxisClassSelect=props.xAxisClassName.replace(/ /g,"."),"."!=xAxisClassSelect[0]&&(xAxisClassSelect="."+xAxisClassSelect);var node=this.refs.xaxis.getDOMNode();if(d3.select(node).attr("class",props.xAxisClassName).call(xAxis),d3.select(xAxisClassSelect).selectAll("line").attr("shape-rendering","crispEdges").attr("stroke",props.tickStroke),d3.select(xAxisClassSelect).select("path").attr("shape-rendering","crispEdges").attr("fill",props.fill).attr("stroke",props.stroke).attr("stroke-width",props.strokeWidth),props.hideOrigin){var originSelect=xAxisClassSelect+" g:first-child";d3.selectAll(originSelect).style("opacity","0")}},render:function(){var props=this.props,t="translate(0,"+props.height+")";return React.createElement("g",{ref:"xaxis",className:props.xAxisClassName,transform:t})}}),exports.YAxis=React.createClass({displayName:"YAxis",propTypes:{yAxisClassName:React.PropTypes.string,orient:React.PropTypes.oneOf(["left","right"]),yScale:React.PropTypes.func.isRequired,fill:React.PropTypes.string,stroke:React.PropTypes.string,tickStroke:React.PropTypes.string,strokeWidth:React.PropTypes.string},getDefaultProps:function(){return{yAxisClassName:"y axis",orient:"left",fill:"none",stroke:"#000",tickStroke:"#000",strokeWidth:"none"}},componentDidMount:function(){this._renderAxis(this.props)},componentWillReceiveProps:function(props){this._renderAxis(props)},_renderAxis:function(props){var yAxis=d3.svg.axis().ticks(props.yAxisTickCount).scale(props.yScale).orient(this.props.orient);props.yAxisTickCount?yAxis.ticks(props.yAxisTickCount):props.yAxisTickInterval&&yAxis.ticks(d3.time[props.yAxisTickInterval.unit],props.yAxisTickInterval.interval),yAxisClassSelect=props.yAxisClassName.replace(/ /g,"."),"."!=yAxisClassSelect[0]&&(yAxisClassSelect="."+yAxisClassSelect);var node=this.refs.yaxis.getDOMNode();d3.select(node).attr("class",props.yAxisClassName).call(yAxis),d3.selectAll(yAxisClassSelect).selectAll("line").attr("shape-rendering","crispEdges").attr("stroke",props.tickStroke),d3.selectAll(yAxisClassSelect).select("path").attr("shape-rendering","crispEdges").attr("fill",props.fill).attr("stroke",props.stroke)},render:function(){var props=this.props;return React.createElement("g",{ref:"yaxis",className:props.yAxisClassName})}})},{d3:"d3",react:"react"}],4:[function(require,module,exports){require("d3"),require("react");exports.BarChart=require("./barchart").BarChart,exports.LineChart=require("./linechart").LineChart,exports.PieChart=require("./piechart").PieChart,exports.AreaChart=require("./areachart").AreaChart,exports.Treemap=require("./treemap").Treemap,exports.ScatterChart=require("./scatterchart").ScatterChart},{"./areachart":1,"./barchart":2,"./linechart":5,"./piechart":6,"./scatterchart":7,"./treemap":8,d3:"d3",react:"react"}],5:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),_=require("lodash"),common=require("./common"),Chart=common.Chart,XAxis=common.XAxis,YAxis=common.YAxis,Line=React.createClass({displayName:"Line",propTypes:{data:React.PropTypes.object,strokeWidth:React.PropTypes.number,path:React.PropTypes.string,fill:React.PropTypes.string,stroke:React.PropTypes.string},getDefaultProps:function(){return{stroke:"#1f77b4",fill:"none"}},render:function(){return React.createElement("path",{d:this.props.path,stroke:this.props.stroke,fill:this.props.fill,strokeWidth:this.props.strokeWidth})}}),Circle=React.createClass({displayName:"Circle",propTypes:{cx:React.PropTypes.number,cy:React.PropTypes.number,r:React.PropTypes.number,fill:React.PropTypes.string},getDefaultProps:function(){return{fill:"#1f77b4"}},render:function(){return React.createElement("circle",{cx:this.props.cx,cy:this.props.cy,r:this.props.r,fill:this.props.fill})}}),DataSeries=React.createClass({displayName:"DataSeries",propTypes:{data:React.PropTypes.array,interpolate:React.PropTypes.string,color:React.PropTypes.string},getDefaultProps:function(){return{data:[],interpolate:"linear",color:"#fff"}},render:function(){var self=this,interpolatePath=d3.svg.line().x(function(d){return self.props.xScale(d.x)}).y(function(d){return self.props.yScale(d.y)}).interpolate(this.props.interpolate),circles=[];return this.props.data.forEach(function(point,i){circles.push(React.createElement(Circle,{cx:this.props.xScale(point.x),cy:this.props.yScale(point.y),r:this.props.pointRadius,fill:this.props.color,key:this.props.seriesName+i}))}.bind(this)),React.createElement("g",null,React.createElement(Line,{path:interpolatePath(this.props.data),stroke:this.props.color}),circles)}}),Axes=React.createClass({displayName:"Axes",propTypes:{xAxisClassName:React.PropTypes.string.isRequired,xOrient:React.PropTypes.oneOf(["top","bottom"]),xScale:React.PropTypes.func.isRequired,xHideOrigin:React.PropTypes.bool,yAxisClassName:React.PropTypes.string.isRequired,yOrient:React.PropTypes.oneOf(["left","right"]),yScale:React.PropTypes.func.isRequired,yHideOrigin:React.PropTypes.bool,chartHeight:React.PropTypes.number.isRequired,chartWidth:React.PropTypes.number.isRequired,fill:React.PropTypes.string,stroke:React.PropTypes.string,tickStroke:React.PropTypes.string,strokeWidth:React.PropTypes.string},getDefaultProps:function(){return{axesColor:"#000"}},render:function(){var props=this.props;return React.createElement("g",null,React.createElement(YAxis,{yAxisClassName:props.yAxisClassName,yScale:props.yScale,yAxisTickCount:props.yAxisTickCount,yHideOrigin:props.yHideOrigin,margins:props.margins,width:props.chartWidth,height:props.chartHeight,stroke:props.axesColor}),React.createElement(XAxis,{xAxisClassName:props.xAxisClassName,strokeWidth:props.strokeWidth,xHideOrigin:props.xHideOrigin,xScale:props.xScale,margins:props.margins,width:props.chartWidth,height:props.chartHeight,stroke:props.axesColor}))}}),LineChart=React.createClass({displayName:"LineChart",propTypes:{margins:React.PropTypes.object,legendOffset:React.PropTypes.number,titleOffset:React.PropTypes.number,pointRadius:React.PropTypes.number,yHideOrigin:React.PropTypes.bool,xHideOrigin:React.PropTypes.bool,width:React.PropTypes.number,height:React.PropTypes.number,axesColor:React.PropTypes.string,title:React.PropTypes.string,colors:React.PropTypes.func,legend:React.PropTypes.bool},getDefaultProps:function(){return{margins:{top:10,right:20,bottom:30,left:30},legendOffset:120,titleOffset:56,pointRadius:3,width:400,height:200,axesColor:"#000",title:"",colors:d3.scale.category20c()}},_calculateScales:function(props,chartWidth,chartHeight){var allValues=_.flatten(_.values(this.props.data),!0),xValues=_.pluck(allValues,"x"),yValues=_.pluck(allValues,"y"),xScale=d3.scale.linear().domain([d3.min([d3.min(xValues),0]),d3.max(xValues)]).range([0,chartWidth]),yScale=d3.scale.linear().domain([d3.min([d3.min(yValues),0]),d3.max(yValues)]).range([chartHeight,0]);return{xScale:xScale,yScale:yScale}},render:function(){{var chartWidth,chartHeight;this.props}chartWidth=this.props.width-this.props.margins.left-this.props.margins.right,chartHeight=this.props.height-this.props.margins.top-this.props.margins.bottom,this.props.legend&&(chartWidth-=this.props.legendOffset),this.props.title&&(chartHeight-=this.props.titleOffset);var scales=this._calculateScales(this.props,chartWidth,chartHeight),trans="translate("+this.props.margins.left+","+this.props.margins.top+")",index=0,dataSeriesArray=[];for(var seriesName in this.props.data)this.props.data.hasOwnProperty(seriesName)&&(dataSeriesArray.push(React.createElement(DataSeries,{xScale:scales.xScale,yScale:scales.yScale,seriesName:seriesName,data:this.props.data[seriesName],width:chartWidth,height:chartHeight,color:this.props.colors(index),pointRadius:this.props.pointRadius,key:seriesName})),index++);return React.createElement(Chart,{legend:this.props.legend,data:this.props.data,margins:this.props.margins,colors:this.props.colors,width:this.props.width,height:this.props.height,title:this.props.title},React.createElement("g",{transform:trans},dataSeriesArray,React.createElement(Axes,{yAxisClassName:"line y axis",yScale:scales.yScale,yAxisTickCount:this.props.yAxisTickCount,yHideOrigin:this.props.yHideOrigin,xAxisClassName:"line x axis",xScale:scales.xScale,xHideOrigin:this.props.xHideOrigin,strokeWidth:"1",margins:this.props.margins,chartWidth:chartWidth,chartHeight:chartHeight,stroke:this.props.axesColor})))}});exports.LineChart=LineChart},{"./common":3,d3:"d3",lodash:"lodash",react:"react"}],6:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),_=require("lodash"),Chart=require("./common").Chart,Arc=React.createClass({displayName:"Arc",getDefaultProps:function(){return{labelTextFill:"black",valueTextFill:"white"}},propTypes:{fill:React.PropTypes.string,d:React.PropTypes.string,startAngle:React.PropTypes.number,endAngle:React.PropTypes.number,innerRadius:React.PropTypes.number,outerRadius:React.PropTypes.number},render:function(){var props=this.props,arc=d3.svg.arc().innerRadius(props.innerRadius).outerRadius(props.outerRadius).startAngle(props.startAngle).endAngle(props.endAngle),rotate="rotate("+(props.startAngle+props.endAngle)/2*(180/Math.PI)+")",radius=(arc.centroid(),props.outerRadius),dist=radius+35,angle=(props.startAngle+props.endAngle)/2,x=1.2*dist*Math.sin(angle),y=-dist*Math.cos(angle),t="translate("+x+","+y+")";return React.createElement("g",{className:"arc-group"},React.createElement("path",{className:"arc",d:arc(),fill:props.fill}),React.createElement("line",{className:"arc-line",x1:"0",x2:"0",y1:-radius-2,y2:-radius-26,stroke:"black",transform:rotate,style:{fill:props.labelTextFill,strokeWidth:2}},">"),React.createElement("text",{className:"arc-label-text",transform:t,dy:".35em",style:{textAnchor:"middle",fill:props.labelTextFill,shapeRendering:"crispEdges"}},this.props.label),React.createElement("text",{className:"arc-value-text",transform:"translate("+arc.centroid()+")",dy:".35em",style:{shapeRendering:"crispEdges",textAnchor:"middle",fill:props.valueTextFill}},this.props.value+"%"))}}),DataSeries=React.createClass({displayName:"DataSeries",propTypes:{transform:React.PropTypes.string,data:React.PropTypes.array,innerRadius:React.PropTypes.number,radius:React.PropTypes.number},getDefaultProps:function(){return{innerRadius:0,data:[],color:d3.scale.category20c()}},render:function(){var props=this.props,pie=d3.layout.pie().sort(null),arcData=pie(props.data),color=this.props.color,arcs=[];return arcData.forEach(function(arc,i){arcs.push(React.createElement(Arc,{startAngle:arc.startAngle,endAngle:arc.endAngle,outerRadius:props.radius,innerRadius:props.innerRadius,labelTextFill:props.labelTextFill,valueTextFill:props.valueTextFill,fill:color(i),label:props.labels[i],value:props.data[i],key:i,width:props.width}))}),React.createElement("g",{className:"pie-group",transform:this.props.transform},arcs)}}),PieChart=React.createClass({displayName:"PieChart",getDefaultProps:function(){return{title:""}},propTypes:{radius:React.PropTypes.number,cx:React.PropTypes.number,cy:React.PropTypes.number,labelTextFill:React.PropTypes.string,valueTextFill:React.PropTypes.string,color:React.PropTypes.func,title:React.PropTypes.string},render:function(){var transform=(this.props,"translate("+(this.props.cx||this.props.width/2)+","+(this.props.cy||this.props.height/2)+")"),data=_.pluck(this.props.data,"value"),labels=_.pluck(this.props.data,"label");return React.createElement(Chart,{className:"pie-chart",width:this.props.width,height:this.props.height,title:this.props.title},React.createElement(DataSeries,{labelTextFill:this.props.labelTextFill,valueTextFill:this.props.valueTextFill,labels:labels,color:this.props.color,transform:transform,data:data,width:this.props.width,height:this.props.height,radius:this.props.radius,innerRadius:this.props.innerRadius}))}});exports.PieChart=PieChart},{"./common":3,d3:"d3",lodash:"lodash",react:"react"}],7:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),common=require("./common"),Chart=common.Chart,XAxis=common.XAxis,YAxis=common.YAxis,_=require("lodash"),Circle=React.createClass({displayName:"Circle",propTypes:{cx:React.PropTypes.number,cy:React.PropTypes.number,r:React.PropTypes.number,fill:React.PropTypes.string,stroke:React.PropTypes.string,strokeWidth:React.PropTypes.number,strokeOpacity:React.PropTypes.number,hoverAnimation:React.PropTypes.bool},getDefaultProps:function(){return{fill:"#1f77b4"}},getInitialState:function(){return{circleRadius:this.props.r,circleColor:this.props.fill}},render:function(){return React.createElement("circle",{fill:this.state.circleColor,cx:this.props.cx,cy:this.props.cy,r:this.state.circleRadius,onMouseOver:this.props.hoverAnimation?this.animateCircle:null,onMouseOut:this.props.hoverAnimation?this.restoreCircle:null})},animateCircle:function(){this.setState({circleRadius:this.state.circleRadius*(5/4),circleColor:this.shade(this.props.fill,-.2)})},restoreCircle:function(){this.setState({circleRadius:.8*this.state.circleRadius,circleColor:this.props.fill})},shade:function(hex,percent){var R,G,B,red,green,blue,number,min=Math.min,round=Math.round;return 7!==hex.length?hex:(number=parseInt(hex.slice(1),16),R=number>>16,G=number>>8&255,B=255&number,red=min(255,round((1+percent)*R)).toString(16),green=min(255,round((1+percent)*G)).toString(16),blue=min(255,round((1+percent)*B)).toString(16),"#"+red+green+blue)}}),DataSeries=React.createClass({displayName:"DataSeries",propTypes:{data:React.PropTypes.array,color:React.PropTypes.string},getDefaultProps:function(){return{data:[],color:"#fff"}},render:function(){var circles=this.props.data.map(function(point,i){return React.createElement(Circle,{cx:this.props.xScale(point.x),cy:this.props.yScale(point.y),r:this.props.pointRadius,fill:this.props.color,key:this.props.seriesName+i,hoverAnimation:this.props.hoverAnimation})}.bind(this));return React.createElement("g",null,circles)}}),ScatterChart=React.createClass({displayName:"ScatterChart",propTypes:{margins:React.PropTypes.object,legendOffset:React.PropTypes.number,titleOffset:React.PropTypes.number,pointRadius:React.PropTypes.number,yHideOrigin:React.PropTypes.bool,xHideOrigin:React.PropTypes.bool,width:React.PropTypes.number,height:React.PropTypes.number,axesColor:React.PropTypes.string,title:React.PropTypes.string,colors:React.PropTypes.func,legend:React.PropTypes.bool,hoverAnimation:React.PropTypes.bool},getDefaultProps:function(){return{margins:{top:20,right:30,bottom:30,left:30},legendOffset:120,titleOffset:56,pointRadius:3,width:400,height:200,axesColor:"#000",title:"",colors:d3.scale.category20c(),hoverAnimation:!0}},_calculateScales:function(props,chartWidth,chartHeight){var allValues=_.flatten(_.values(this.props.data),!0),xValues=_.pluck(allValues,"x"),yValues=_.pluck(allValues,"y"),xScale=d3.scale.linear().domain([d3.min([d3.min(xValues),0]),d3.max(xValues)]).range([0,chartWidth]),yScale=d3.scale.linear().domain([d3.min([d3.min(yValues),0]),d3.max(yValues)]).range([chartHeight,0]);return{xScale:xScale,yScale:yScale}},render:function(){var chartWidth,chartHeight;chartWidth=this.props.width-this.props.margins.left-this.props.margins.right,chartHeight=this.props.height-this.props.margins.top-this.props.margins.bottom,this.props.legend&&(chartWidth-=this.props.legendOffset),this.props.title&&(chartHeight-=this.props.titleOffset);var scales=this._calculateScales(this.props,chartWidth,chartHeight),trans="translate("+this.props.margins.left+","+this.props.margins.top+")",index=0,dataSeriesArray=[];for(var seriesName in this.props.data)this.props.data.hasOwnProperty(seriesName)&&(dataSeriesArray.push(React.createElement(DataSeries,{xScale:scales.xScale,yScale:scales.yScale,seriesName:seriesName,data:this.props.data[seriesName],width:chartWidth,height:chartHeight,color:this.props.colors(index),pointRadius:this.props.pointRadius,key:seriesName,hoverAnimation:this.props.hoverAnimation})),index++);return React.createElement(Chart,{width:this.props.width,height:this.props.height,title:this.props.title},React.createElement("g",{transform:trans},dataSeriesArray,React.createElement(YAxis,{yAxisClassName:"scatter y axis",yScale:scales.yScale,yHideOrigin:this.props.yHideOrigin,margins:this.props.margins,yAxisTickCount:this.props.yAxisTickCount,width:chartWidth,height:chartHeight,stroke:this.props.axesColor}),React.createElement(XAxis,{xAxisClassName:"scatter x axis",strokeWidth:"1",xHideOrigin:this.props.xHideOrigin,xScale:scales.xScale,data:this.props.data,margins:this.props.margins,width:chartWidth,height:chartHeight,stroke:this.props.axesColor})))}});exports.ScatterChart=ScatterChart},{"./common":3,d3:"d3",lodash:"lodash",react:"react"}],8:[function(require,module,exports){"use strict";var React=require("react"),d3=require("d3"),Chart=require("./common").Chart,Cell=React.createClass({displayName:"Cell",propTypes:{cellColor:React.PropTypes.string,width:React.PropTypes.number,height:React.PropTypes.number,label:React.PropTypes.string},render:function(){var textStyle={textAnchor:"middle",fill:this.props.textColor,fontSize:this.props.fontSize},t="translate("+this.props.x+","+this.props.y+")";return React.createElement("g",{transform:t},React.createElement("rect",{fill:this.props.cellColor,width:this.props.width,height:this.props.height}),React.createElement("text",{x:this.props.width/2,y:this.props.height/2,dy:".35em",style:textStyle},this.props.label))}}),DataSeries=React.createClass({displayName:"DataSeries",propTypes:{data:React.PropTypes.array,value:React.PropTypes.string},getDefaultProps:function(){return{data:[],value:"value",label:"label"}},render:function(){var data=this.props.data,value=this.props.value,label=this.props.label,color=d3.scale.category20c(),treemap=d3.layout.treemap().children(function(d){return d}).size([this.props.width,this.props.height]).sticky(!0).value(function(d){return d[value]}),cells=treemap(data).map(function(node,i){return React.createElement(Cell,{x:node.x,y:node.y,width:node.dx,height:node.dy,cellColor:color(i),label:node[label],key:i})},this);return React.createElement("g",{transform:this.props.transform,className:"treemap"},cells)}}),Treemap=React.createClass({displayName:"Treemap",propTypes:{margins:React.PropTypes.object,data:React.PropTypes.array,width:React.PropTypes.number,height:React.PropTypes.number,title:React.PropTypes.string,textColor:React.PropTypes.string,fontSize:React.PropTypes.oneOfType([React.PropTypes.string,React.PropTypes.number])},getDefaultProps:function(){return{data:[],width:400,heigth:200,title:"",textColor:"#f7f7f7",fontSize:"0.65em"}},render:function(){return React.createElement(Chart,{title:this.props.title,width:this.props.width,height:this.props.height},React.createElement(DataSeries,{width:this.props.width,height:this.props.height,data:this.props.data,textColor:this.props.textColor,fontSize:this.props.fontSize}))}});exports.Treemap=Treemap},{"./common":3,d3:"d3",react:"react"}]},{},[4])(4)});